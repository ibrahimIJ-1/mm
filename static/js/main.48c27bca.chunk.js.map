{"version":3,"sources":["helpers/superagentAPI.js","components/basic/Loading.jsx","components/login/Login.jsx","components/AuthGuard.jsx","components/layout/dashboardRoutes.jsx","components/layout/dashboard.jsx","App.jsx","serviceWorker.js","index.jsx","helpers/notificationHandler.jsx","helpers/superagent.js","store/index.js","i18n.js","assets/images/logo.svg"],"names":["baseUrl","process","getRequest","url","a","superagent","getAgentInstance","get","data","body","postRequest","post","send","deleteRequest","delete","LoadingComponent","this","props","visible","tip","antIcon","Loading3QuartersOutlined","style","fontSize","spin","type","justify","align","minHeight","minWidth","display","span","textAlign","size","indicator","React","Component","Login","Option","inject","observer","initialState","loading","isUserValid","formValues","undefined","state","onSubmit","values","username","password","setState","user","userStore","setUser","tokenStore","setToken","token","location","reload","onGoBack","window","handleKeyDown","event","key","formRef","createRef","i18n","language","changeLanguage","otpLoadingBtn","height","md","className","width","gutter","src","logo","alt","name","onFinish","autoComplete","Item","label","color","t","rules","required","message","Password","alignItems","justifyContent","htmlType","withTranslation","AuthGuard","children","value","trim","to","options","Math","random","path","component","lazy","exact","icon","HomeOutlined","render","EditOutlined","StarOutlined","TeamOutlined","PartitionOutlined","AlignCenterOutlined","QuestionCircleOutlined","ShopOutlined","CheckCircleOutlined","CheckOutlined","SubnodeOutlined","AppstoreAddOutlined","BarcodeOutlined","DollarCircleOutlined","AreaChartOutlined","SketchOutlined","DoubleLeftOutlined","FontColorsOutlined","FacebookOutlined","Header","Content","Footer","Sider","rootSubmenuKeys","Dashboard","collapsed","defualtMenu","UIFlags","brandingLogo","brandingColor","countRent","countSale","openKeys","clients","pushingNotifications","routeClicked","history","push","toggleSidebar","prevState","logout","localStorage","removeItem","warning","scope","confirm","centered","title","content","okText","cancelText","onOk","onCancel","sectionName","pathname","menu","top","onClick","PoweroffOutlined","Loading","theme","left","right","position","overflow","smalLogo","largeLogo","onOpenChange","keys","latestOpenKey","find","indexOf","mode","selectedKeys","routes","map","r","subRoutes","SubMenu","createElement","subRoute","transition","marginLeft","marginRight","padding","MenuUnfoldOutlined","MenuFoldOutlined","paddingLeft","paddingRight","overlay","trigger","placement","name_en","toLowerCase","DownOutlined","margin","marginBottom","backgroundColor","fallback","route","fontFamily","shape","UserOutlined","target","rel","href","withRouter","rtlLocales","App","useTranslation","useEffect","lang","html","document","getElementsByTagName","split","classList","remove","add","onLangChangeHandler","direction","Boolean","hostname","match","getItem","stores","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","err","response","statusCode","notification","description","errors","err2","param","msg","Promise","all","currentLang","agent","on","notificationHandler","rawToken","substr","length","set","store","superagentAbsolute","Token","setItem","JSON","stringify","persist","observable","action","hydrate","create","storage","jsonify","use","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","resources","en","ar","module","exports"],"mappings":"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","file":"static/js/main.48c27bca.chunk.js","sourcesContent":["import getAgentInstance from './superagent'\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\nexport async function getRequest(url){\r\n    const superagent = getAgentInstance()\r\n    let data = await superagent.get(baseUrl+url)\r\n    return data.body\r\n}\r\n\r\nexport async function postRequest(url,body){\r\n    const superagent = getAgentInstance()\r\n    let data = await superagent.post(baseUrl+url).send(body)\r\n    return data.body\r\n}\r\n\r\nexport async function putRequest(url,body){\r\n    const superagent = getAgentInstance()\r\n    let data = await superagent.put(baseUrl+url).send(body)\r\n    return data.body\r\n}\r\n\r\nexport async function patchRequest(url,body){\r\n    const superagent = getAgentInstance()\r\n    let data = await superagent.patch(baseUrl+url).send(body)\r\n    return data.body\r\n}\r\n\r\nexport async function deleteRequest(url,body){\r\n    const superagent = getAgentInstance()\r\n    let data = await superagent.delete(baseUrl+url).send(body)\r\n    return data.body\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Spin } from 'antd';\r\nimport { Loading3QuartersOutlined } from '@ant-design/icons';\r\n\r\nclass LoadingComponent extends React.Component {\r\n  render() {\r\n    const { visible, tip } = this.props;\r\n    const antIcon = <Loading3QuartersOutlined style={{ fontSize: 30 }} spin />;\r\n    return (\r\n      <>\r\n        <Row\r\n          type=\"flex\"\r\n          justify=\"space-around\"\r\n          align=\"middle\"\r\n          style={{ minHeight: 170, minWidth: 200, display: visible ? '' : 'none' }}\r\n        >\r\n          <Col span={24} style={{ textAlign: 'center' }}>\r\n            <Spin\r\n              size=\"large\"\r\n              tip={tip || 'loading data'}\r\n              indicator={antIcon}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LoadingComponent;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {\r\n    Row, Col, Form, Input, Button,\r\n    message, Select, Card, Space, notification,\r\n} from 'antd';\r\nimport {\r\n    ArrowRightOutlined,\r\n    LockFilled,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport {observer, inject} from 'mobx-react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport i18n from '../../i18n';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport {postRequest} from '../../helpers/superagentAPI';\r\n\r\nimport './login.css';\r\n\r\nconst {Option} = Select;\r\n\r\n\r\n@inject('tokenStore', 'userStore')\r\n@observer\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialState = () => ({\r\n            loading: false,\r\n            isUserValid: false,\r\n            formValues: undefined,\r\n        });\r\n        this.state = this.initialState();\r\n\r\n        this.onSubmit = async (values) => {\r\n            try{\r\n                const {username,password} = values\r\n                this.setState({\r\n                    loading:true\r\n                })\r\n                let user = await postRequest('User/login',{\r\n                    username,\r\n                    password\r\n                })\r\n                this.props.userStore.setUser(user.user);\r\n                this.props.tokenStore.setToken(user.token.token);\r\n                location.reload()\r\n            }\r\n            catch(error){}\r\n            finally {\r\n                this.setState({\r\n                    loading:false\r\n                })\r\n            }\r\n        };\r\n\r\n        this.onGoBack = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.handleKeyDown = (event) => {\r\n            if (event.key === 'Enter') {\r\n                this.onSubmit();\r\n            }\r\n        };\r\n\r\n\r\n        this.formRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (i18n.language === 'en-US') {\r\n            i18n.changeLanguage('en');\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {loading, isUserValid, otpLoadingBtn} = this.state;\r\n        return (\r\n            <>\r\n                <Row align={'center'} justify={'middle'} style={{\r\n                    height: '100vh'\r\n                }}>\r\n                    <Col span={24} md={10}>\r\n                        <Card className=\"login-card font-calss darkBlueBg\" width={'50%'}>\r\n                            <div>\r\n                                <Row justify=\"center\" gutter={[0, 10]}>\r\n                                    <Col>\r\n                                        <p className=\"login-card-title font-calss\">\r\n                                            <img style={{width: '100%'}} src={logo} alt=\"logo\"/>\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row align={'center'}>\r\n                                    <Col span={24} md={20}>\r\n                                        <Form\r\n                                            name=\"basic\"\r\n                                            onFinish={this.onSubmit}\r\n                                            autoComplete=\"off\"\r\n                                        >\r\n                                            <Form.Item\r\n                                                label={<label style={{ color: \"white\" }}>{i18n.t('Username')}</label>}\r\n                                                name=\"username\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: i18n.t('Input is required'),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input/>\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item\r\n                                                label={<label style={{ color: \"white\" }}>{i18n.t('Password')}</label>}\r\n                                                name=\"password\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: i18n.t('Input is required'),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password/>\r\n                                            </Form.Item>\r\n                                            <Row align={'center'}>\r\n                                                <Col span={6} style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:'center',\r\n                                                    justifyContent:'center'\r\n                                                }}>\r\n                                                    <Button type=\"primary\" htmlType=\"submit\" className={'yellowBg'} loading={loading}>\r\n                                                        {i18n.t('Sign in')}\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Login);\r\n","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Login from './login/Login';\r\n\r\n@inject('tokenStore')\r\n@observer\r\nclass AuthGuard extends React.Component {\r\n  render() {\r\n    const { children, tokenStore } = this.props;\r\n    if (`${tokenStore.value}`.trim() !== '') {\r\n      return children;\r\n    }\r\n    return <Login to={children} />;\r\n  }\r\n}\r\n\r\nexport default AuthGuard;\r\n","import { lazy } from \"react\";\r\nimport i18n from \"../../i18n\";\r\n\r\nimport {\r\n  FontColorsOutlined,\r\n  HomeOutlined,\r\n  EditOutlined,\r\n  StarOutlined,\r\n  TeamOutlined,\r\n  PartitionOutlined,\r\n  AlignCenterOutlined,\r\n  QuestionCircleOutlined,\r\n  ShopOutlined,\r\n  CheckCircleOutlined,\r\n  CheckOutlined,\r\n  SubnodeOutlined,\r\n  AppstoreAddOutlined,\r\n  BarcodeOutlined,\r\n  DollarCircleOutlined,\r\n  AreaChartOutlined,\r\n  SketchOutlined,\r\n  DoubleLeftOutlined,\r\n  FacebookOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst options = [\r\n  {\r\n    key: Math.random(),\r\n    path: \"/HomeScreen\",\r\n    component: lazy(() => import(\"../HomeScreen/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Home Screen\"),\r\n    icon: HomeOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/OurJobs\",\r\n    component: lazy(() => import(\"../OurJobs/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Our Jobs\"),\r\n    icon: EditOutlined,\r\n    render: true,\r\n  },\r\n\r\n  {\r\n    key: Math.random(),\r\n    path: \"/SpecialUs\",\r\n    component: lazy(() => import(\"../SpecialUs/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"What Make Us Special\"),\r\n    icon: StarOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/OurClients\",\r\n    component: lazy(() => import(\"../OurClients/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Our Clients\"),\r\n    icon: TeamOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/OurPartners\",\r\n    component: lazy(() => import(\"../OurPartners/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Our Partners\"),\r\n    icon: PartitionOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Testemonies\",\r\n    component: lazy(() => import(\"../Testemonies/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Testemonies\"),\r\n    icon: AlignCenterOutlined,\r\n    render: true,\r\n  },\r\n\r\n  {\r\n    key: Math.random(),\r\n    path: \"/FAQ\",\r\n    component: lazy(() => import(\"../FAQ/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"FAQ\"),\r\n    icon: QuestionCircleOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Services\",\r\n    component: lazy(() => import(\"../Services/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Services\"),\r\n    icon: ShopOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/ServiceAchivments\",\r\n    component: lazy(() => import(\"../ServiceAchivments/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Service Achievments\"),\r\n    icon: CheckCircleOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/ServiceBenifites\",\r\n    component: lazy(() => import(\"../ServiceBenifites/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Service Benifites\"),\r\n    icon: CheckOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/SubService\",\r\n    component: lazy(() => import(\"../SubService/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Sub Services\"),\r\n    icon: SubnodeOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/SubServiceBenifites\",\r\n    component: lazy(() => import(\"../SubServiceBenifites/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Sub Service Benifites\"),\r\n    icon: AppstoreAddOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/SubServicePlan\",\r\n    component: lazy(() => import(\"../SubServicePlan/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Sub Service plans\"),\r\n    icon: BarcodeOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Budgets\",\r\n    component: lazy(() => import(\"../Budgets/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Budgets\"),\r\n    icon: DollarCircleOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Countries\",\r\n    component: lazy(() => import(\"../Countries/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Countries\"),\r\n    icon: AreaChartOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/OurValues\",\r\n    component: lazy(() => import(\"../OurValues/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Our Values\"),\r\n    icon: SketchOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Addresses\",\r\n    component: lazy(() => import(\"../Addresses/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Addresses\"),\r\n    icon: DoubleLeftOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/blogs\",\r\n    component: lazy(() => import(\"../blogs/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"blogs\"),\r\n    icon: FontColorsOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/SocialMedia\",\r\n    component: lazy(() => import(\"../SocialMedia/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Social Media\"),\r\n    icon: FacebookOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/AboutVideo\",\r\n    component: lazy(() => import(\"../AboutVideo/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"About\"),\r\n    icon: FacebookOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Benefits\",\r\n    component: lazy(() => import(\"../Benifites/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Benefits\"),\r\n    icon: AppstoreAddOutlined,\r\n    render: true,\r\n  },\r\n  {\r\n    key: Math.random(),\r\n    path: \"/Plans\",\r\n    component: lazy(() => import(\"../Plans/List\")),\r\n    exact: true,\r\n    name: i18n.t(\"Plans\"),\r\n    icon: BarcodeOutlined,\r\n    render: true,\r\n  },\r\n  //   {\r\n  //     key: Math.random(),\r\n  //     path: \"/AppVariables\",\r\n  //     component: lazy(() => import(\"../appVariables/List\")),\r\n  //     exact: true,\r\n  //     name: i18n.t(\"appVariables\"),\r\n  //     icon: FontColorsOutlined,\r\n  //     render: true,\r\n  //   },\r\n];\r\nexport default options;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { Suspense } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport {\r\n    Layout, Menu, Button, Avatar, Dropdown, Modal,\r\n    Popover, Col, Row, Badge, Form, Input\r\n} from 'antd';\r\nimport {\r\n    TeamOutlined,\r\n    UserOutlined,\r\n    DownOutlined,\r\n    PoweroffOutlined,\r\n    MenuFoldOutlined,\r\n    MenuUnfoldOutlined,\r\n    NotificationOutlined\r\n} from '@ant-design/icons';\r\nimport {\r\n    Switch, Route, Link, withRouter,\r\n} from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport i18n from '../../i18n';\r\nimport store from '../../store';\r\nimport routes from './dashboardRoutes';\r\nimport Loading from '../basic/Loading';\r\nimport getAgentInstance from '../../helpers/superagent';\r\nimport { postRequest } from '../../helpers/superagentAPI'\r\nimport largeLogo from '../../assets/images/logo.svg';\r\nimport smalLogo from '../../assets/images/logo.svg';\r\n\r\nimport './dashboard.css';\r\n\r\nconst superagent = getAgentInstance();\r\nconst {\r\n    Header, Content, Footer, Sider,\r\n} = Layout;\r\nconst rootSubmenuKeys = ['/', '2', '6', '4', '7'];\r\n\r\n@inject('userStore', 'tokenStore')\r\n@observer\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = () => ({\r\n            loading: false,\r\n            collapsed: false,\r\n            defualtMenu: 'visitlist',\r\n            UIFlags: {},\r\n            brandingLogo: '',\r\n            brandingColor: '',\r\n            countRent: 0,\r\n            countSale: 0,\r\n            openKeys: [],\r\n            clients: [],\r\n            pushingNotifications: false\r\n        });\r\n        this.state = this.initialState();\r\n\r\n        this.routeClicked = (history, to) => {\r\n            history.push(to);\r\n        };\r\n        this.toggleSidebar = () => {\r\n            this.setState((prevState) => ({\r\n                collapsed: !prevState.collapsed,\r\n            }));\r\n        };\r\n        this.logout = () => {\r\n            localStorage.removeItem(process.env.REACT_APP_USER_LOCALSTORAGE_NAME)\r\n            localStorage.removeItem(process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME)\r\n            location.reload()\r\n        };\r\n\r\n        this.warning = () => {\r\n            const scope = this;\r\n            Modal.confirm({\r\n                centered: true,\r\n                title: i18n.t('Logout Of The System?'),\r\n                content: '',\r\n                okText: i18n.t('Yes'),\r\n                cancelText: i18n.t('No'),\r\n                onOk() {\r\n                    scope.logout();\r\n                },\r\n                onCancel() {\r\n                },\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { location, userStore, history } = this.props;\r\n        const {\r\n            collapsed,\r\n            loading,\r\n            brandingLogo,\r\n            brandingColor,\r\n            openKeys,\r\n            pushingNotifications\r\n        } = this.state;\r\n        const { pathname } = location;\r\n        const { value } = userStore;\r\n\r\n        let sectionName;\r\n        if (pathname === '/') {\r\n            sectionName = i18n.t('Dashboard');\r\n        }\r\n\r\n        const menu = (\r\n            <Menu style={{ top: '10px' }}>\r\n                {/*<Menu.Item*/}\r\n                {/*    onClick={() => {*/}\r\n                {/*        return*/}\r\n                {/*    }}*/}\r\n                {/*    icon={(*/}\r\n                {/*        <UserOutlined*/}\r\n                {/*            style={{*/}\r\n                {/*                color: brandingColor !== '' ? brandingColor : '#65DFC2',*/}\r\n                {/*            }}*/}\r\n                {/*        />*/}\r\n                {/*    )}*/}\r\n                {/*>*/}\r\n                {/*    {i18n.t('My Profile')}*/}\r\n                {/*</Menu.Item>*/}\r\n                {/*<Menu.Item*/}\r\n                {/*    onClick={() => {*/}\r\n                {/*        return*/}\r\n                {/*    }}*/}\r\n                {/*    icon={(*/}\r\n                {/*        <TeamOutlined*/}\r\n                {/*            style={{*/}\r\n                {/*                color: brandingColor !== '' ? brandingColor : '#65DFC2',*/}\r\n                {/*            }}*/}\r\n                {/*        />*/}\r\n                {/*    )}*/}\r\n                {/*>*/}\r\n                {/*    {i18n.t('User Profile')}*/}\r\n                {/*</Menu.Item>*/}\r\n                {/*<Menu.Divider/>*/}\r\n                <Menu.Item\r\n                    onClick={this.warning}\r\n                    icon={(\r\n                        <PoweroffOutlined\r\n                            style={{\r\n                                color: brandingColor !== '' ? brandingColor : '#65DFC2',\r\n                            }}\r\n                        />\r\n                    )}\r\n                >\r\n                    {i18n.t('Logout')}\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n\r\n        const sendNotificationToAllUsersFormFinish = async (values) => {\r\n            try {\r\n                this.setState({\r\n                    pushingNotifications: true\r\n                })\r\n                const { title, ar_title, kr_title, description, ar_description, kr_description } = values\r\n                await postRequest('/admin/notifications/push', {\r\n                    title,\r\n                    ar_title,\r\n                    kr_title,\r\n                    description,\r\n                    ar_description,\r\n                    kr_description\r\n                })\r\n            } catch (error) {\r\n\r\n            } finally {\r\n                this.setState({\r\n                    pushingNotifications: false\r\n                })\r\n            }\r\n        }\r\n\r\n        const onOpenChange = (keys) => {\r\n            const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\r\n            if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n                this.setState({ openKeys: keys });\r\n            } else {\r\n                this.setState({ openKeys: latestOpenKey ? [latestOpenKey] : [] });\r\n            }\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <style>\r\n                    {`\r\n\r\n          .sider_toggler_btn {\r\n            position: static !important;\r\n          top: 0 !important;\r\n          left: 0px !important;\r\n          z-index: 2;\r\n          }\r\n\r\n          .sider_menu_links.ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {\r\n              background-color: ${brandingColor}1a;\r\n          }\r\n\r\n          .sider_menu_links .ant-menu-item:hover {\r\n              background-color: ${brandingColor}1a;\r\n          }\r\n\r\n          .sider_menu_links .ant-menu-item-selected::before {\r\n              content: '';\r\n              width: 4px;\r\n              height: 100%;\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              background: ${brandingColor};\r\n          }\r\n        `}\r\n                </style>\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100vh',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        display: !loading ? 'none' : 'flex',\r\n                    }}\r\n                >\r\n                    <Loading visible={loading} tip={i18n.t('Loading Kulshi Data...')} />\r\n                </div>\r\n                <Layout\r\n                    style={{\r\n                        minHeight: '100vh',\r\n                        display: loading ? 'none' : undefined,\r\n                    }}\r\n                >\r\n                    <Sider\r\n                        theme=\"light\"\r\n                        className=\"layout_sider darkBlueBg\"\r\n                        width={240}\r\n                        collapsed={collapsed}\r\n                        style={{\r\n                            height: '100vh',\r\n                            left: i18n.language === 'en' ? 0 : null,\r\n                            right: i18n.language !== 'en' ? 0 : null,\r\n                            position: 'fixed',\r\n                            overflow: 'auto',\r\n                        }}\r\n                    >\r\n                        <div className={collapsed ? 'logo_small' : 'logo'}>\r\n                            {collapsed ? (\r\n                                <img\r\n                                    alt=\"logo\"\r\n                                    style={{ width: 65 }}\r\n                                    src={brandingLogo !== '' ? brandingLogo : smalLogo}\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    alt=\"logo\"\r\n                                    style={{ width: 185 }}\r\n                                    src={brandingLogo !== '' ? brandingLogo : largeLogo}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <Menu\r\n                            openKeys={openKeys}\r\n                            onOpenChange={onOpenChange}\r\n                            mode=\"inline\"\r\n                            className=\"sider_menu_links\"\r\n                            selectedKeys={[location.pathname]}\r\n                        >\r\n                            {routes.map(r => {\r\n                                return (r.render && (\r\n                                    (\r\n                                        (!r.subRoutes ? (\r\n                                            <Menu.Item key={r.path}>\r\n                                                {r.icon ? React.createElement(r.icon, {}) : (<></>)}\r\n                                                <span>{i18n.t(r.name)}</span>\r\n                                                <Link to={r.path} />\r\n                                            </Menu.Item>\r\n                                        ) : (\r\n                                            <Menu.SubMenu\r\n                                                key={r.key}\r\n                                                title={i18n.t(r.name)}\r\n                                                icon={r.icon ? React.createElement(r.icon, {}) : (<></>)}\r\n                                            >\r\n                                                {r.subRoutes.map(subRoute => {\r\n                                                    return (subRoute.render && (\r\n                                                        <Menu.Item key={subRoute.path}>\r\n                                                            {subRoute.icon ? React.createElement(subRoute.icon, {}) : (<></>)}\r\n                                                            <span>{i18n.t(subRoute.name)}</span>\r\n                                                            <Link to={subRoute.path} />\r\n                                                        </Menu.Item>\r\n                                                    ))\r\n                                                })\r\n                                                }\r\n                                            </Menu.SubMenu>\r\n                                        ))\r\n                                    )\r\n                                ))\r\n                            })}\r\n                        </Menu>\r\n                    </Sider>\r\n                    {i18n.language === 'en' ? (\r\n                        <Layout\r\n                            className=\"site-layout\"\r\n                            style={{\r\n                                transition: 'all 0.3s',\r\n                                marginLeft: collapsed === false ? 240 : 80,\r\n                                marginRight: 0,\r\n                            }}\r\n                        >\r\n                            <Header\r\n                                className=\"site-layout-background yellowBg\"\r\n                                style={{ padding: 0, display: 'inherit', position: 'relative' }}\r\n                            >\r\n                                <Col>\r\n                                    <div className=\"sider_toggler_btn\">\r\n                                        <Button\r\n                                            type=\"link\"\r\n                                            icon={\r\n                                                collapsed ? (\r\n                                                    <MenuUnfoldOutlined style={{ color: '#1f2532' }} />\r\n                                                ) : (\r\n                                                    <MenuFoldOutlined style={{ color: '#1f2532' }} />\r\n                                                )\r\n                                            }\r\n                                            onClick={this.toggleSidebar}\r\n                                            style={{\r\n                                                textAlign: 'start',\r\n                                                paddingLeft: 10,\r\n                                                paddingRight: undefined,\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <div className=\"main_header_container\">\r\n                                    <div className=\"section_title\">{sectionName || ''}</div>\r\n                                    <div className=\"header_avatar\">\r\n                                        <Row gutter={[10, 0]}>\r\n                                            <Col>\r\n                                                <Dropdown\r\n                                                    overlay={menu}\r\n                                                    trigger=\"click\"\r\n                                                    placement=\"bottomRight\"\r\n                                                >\r\n                                                    <span className=\"ant-dropdown-link pointer header_display_name\">\r\n                                                        {value?.name_en?.toLowerCase()}\r\n                                                        {' '}\r\n                                                        <DownOutlined style={{ marginLeft: '5px' }} />\r\n                                                    </span>\r\n                                                </Dropdown>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            </Header>\r\n                            <Content style={{ margin: '16px 16px', marginBottom: 0 }}>\r\n                                <div\r\n                                    className=\"site-layout-background\"\r\n                                    style={{\r\n                                        padding: '8px 8px 0',\r\n                                        minHeight: 500,\r\n                                        backgroundColor: 'transparent',\r\n                                    }}\r\n                                >\r\n                                    <Suspense fallback={<Loading />}>\r\n                                        <Switch>\r\n                                            {routes.map((route) => (!route.subRoutes ? (<Route\r\n                                                exact={route.exact}\r\n                                                key={route.key}\r\n                                                path={`${route.path}`}\r\n                                            >\r\n                                                <route.component />\r\n                                            </Route>) : (route.subRoutes.map(subRoute => (<Route\r\n                                                exact={subRoute.exact}\r\n                                                key={subRoute.key}\r\n                                                path={`${subRoute.path}`}\r\n                                            >\r\n                                                <subRoute.component />\r\n                                            </Route>)))))}\r\n                                        </Switch>\r\n                                    </Suspense>\r\n                                </div>\r\n                            </Content>\r\n\r\n                        </Layout>\r\n                    ) : (\r\n                        <Layout\r\n                            className=\"site-layout\"\r\n                            style={{\r\n                                transition: 'all 0.3s',\r\n                                marginRight: collapsed === false ? 240 : 80,\r\n                                marginLeft: 0,\r\n                            }}\r\n                        >\r\n                            <Header\r\n                                className=\"site-layout-background yellowBg\"\r\n                                style={{ padding: 0, display: 'inherit', position: 'relative' }}\r\n                            >\r\n                                <Col\r\n                                    span={1}\r\n                                    style={{\r\n                                        textAlign: 'start',\r\n                                        paddingLeft: undefined,\r\n                                        paddingRight: 10,\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"link\"\r\n                                        icon={\r\n                                            collapsed ? (\r\n                                                <MenuUnfoldOutlined style={{ color: '#1f2532' }} />\r\n                                            ) : (\r\n                                                <MenuFoldOutlined style={{ color: '#1f2532' }} />\r\n                                            )\r\n                                        }\r\n                                        onClick={this.toggleSidebar}\r\n                                    />\r\n                                </Col>\r\n                                <div className=\"main_header_container\">\r\n                                    <div className=\"section_title\">{sectionName || ''}</div>\r\n                                    <div className=\"header_avatar\">\r\n                                        <Row gutter={[10, 0]}>\r\n                                            <Col>\r\n                                                <Dropdown\r\n                                                    overlay={(\r\n                                                        <Menu>\r\n                                                            <Menu.Item\r\n                                                                onClick={() => {\r\n                                                                    i18n.changeLanguage('ar');\r\n                                                                    window.location.reload();\r\n                                                                }}\r\n                                                                key=\"4\"\r\n                                                                style={{ fontFamily: 'arabic_regular' }}\r\n                                                            >\r\n                                                                عربي\r\n                                                            </Menu.Item>\r\n                                                            <Menu.Item\r\n                                                                onClick={() => {\r\n                                                                    i18n.changeLanguage('en');\r\n                                                                    window.location.reload();\r\n                                                                }}\r\n                                                                key=\"1\"\r\n                                                                style={{ fontFamily: 'CuprumRegular' }}\r\n                                                            >\r\n                                                                English\r\n                                                            </Menu.Item>\r\n                                                        </Menu>\r\n                                                    )}\r\n                                                >\r\n                                                    <Button className=\"br-10_h-40\" type=\"default\">\r\n                                                        {i18n.language === 'ar' ? 'العربية' : null}\r\n                                                        {' '}\r\n                                                        {i18n.language === 'en' ? 'English' : null}\r\n                                                        <DownOutlined />\r\n                                                    </Button>\r\n                                                </Dropdown>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Avatar shape=\"square\" icon={<UserOutlined />} />\r\n                                            </Col>\r\n                                            <Col style={{ marginLeft: '10px' }}>\r\n                                                <Dropdown\r\n                                                    overlay={menu}\r\n                                                    trigger=\"click\"\r\n                                                    placement=\"bottomRight\"\r\n                                                >\r\n                                                    <span className=\"ant-dropdown-link pointer header_display_name\">\r\n                                                        {value?.name_en?.toLowerCase()}\r\n                                                        {' '}\r\n                                                        <DownOutlined style={{ marginRight: '5px' }} />\r\n                                                    </span>\r\n                                                </Dropdown>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            </Header>\r\n                            <Content style={{ margin: '16px 16px', marginBottom: 0 }}>\r\n                                <div\r\n                                    className=\"site-layout-background\"\r\n                                    style={{\r\n                                        padding: '8px 8px 0',\r\n                                        minHeight: 500,\r\n                                        backgroundColor: 'transparent',\r\n                                    }}\r\n                                >\r\n                                    <Suspense fallback={<Loading />}>\r\n                                        <Switch>\r\n                                            {routes.map((route) => (\r\n                                                !route.subRoutes ? (<Route\r\n                                                    exact={route.exact}\r\n                                                    key={route.key}\r\n                                                    path={`${route.path}`}\r\n                                                >\r\n                                                    <route.component />\r\n                                                </Route>\r\n                                                ) : (\r\n                                                    route.subRoutes.map((subRoute) => (\r\n                                                        <Route\r\n                                                            exact={subRoute.exact}\r\n                                                            key={subRoute.key}\r\n                                                            path={`${subRoute.path}`}\r\n                                                        >\r\n                                                            <subRoute.component />\r\n                                                        </Route>\r\n                                                    ))\r\n                                                )\r\n                                            ))}\r\n                                        </Switch>\r\n                                    </Suspense>\r\n                                </div>\r\n                            </Content>\r\n                            <Footer style={{ textAlign: 'center' }}>\r\n                                <span>{i18n.t('Designed and Developed By')}</span>\r\n                                &nbsp;\r\n                                <a\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    href=\"https://lucid-source.com\"\r\n                                    title=\"Lucid Source\"\r\n                                >\r\n                                    {i18n.t('Lucid Source')}\r\n                                </a>\r\n                            </Footer>\r\n                        </Layout>\r\n                    )}\r\n                </Layout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(\r\n    withRouter((props) =>\r\n        <Dashboard {...props} />\r\n    ),\r\n);\r\n","import React, { Suspense, useEffect } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Loading from './components/basic/Loading';\r\nimport AuthGuard from './components/AuthGuard';\r\nimport Dashboard from './components/layout/dashboard';\r\nimport store from './store'\r\nimport './assets/styles/global.css'\r\nconst rtlLocales = ['ar'];\r\n\r\nfunction App() {\r\n  const { i18n } = useTranslation();\r\n\r\n  function onLangChangeHandler(lang) {\r\n    const html = document.getElementsByTagName('html')[0];\r\n    const splitLang = lang.split('-');\r\n\r\n    if (splitLang[0] === 'en') {\r\n      html.classList.remove('rtl');\r\n    } else {\r\n      html.classList.add('rtl');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    onLangChangeHandler(i18n.language);\r\n  });\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <div className=\"main-wrapper\" lang={i18n.language}>\r\n        <ConfigProvider\r\n          direction={rtlLocales.indexOf(i18n.language) > -1 ? 'rtl' : 'ltr'}\r\n        >\r\n          <AuthGuard>\r\n            <Dashboard />\r\n          </AuthGuard>\r\n        </ConfigProvider>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, );\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import 'antd/dist/antd.css';\r\nimport stores from './store/index';\r\nimport './assets/styles/global.css';\r\n\r\nimport './i18n';\r\n\r\nvar token = localStorage.getItem(process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME)\r\nif (token) {\r\n  stores.tokenStore.value = token\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider {...stores}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { notification, Modal } from 'antd';\r\n\r\nconst logout = () => {\r\n  Promise.all([\r\n    localStorage.removeItem(process.env.REACT_APP_USER_LOCALSTORAGE_NAME),\r\n    localStorage.removeItem(process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME),\r\n  ]).then(() => {\r\n    window.location.reload();\r\n  });\r\n};\r\n\r\nexport default (err) => {\r\n  if (err.response) {\r\n    const { response } = err;\r\n    const { statusCode, body } = response;\r\n    if (statusCode === 422) {\r\n      notification.error({\r\n        message: 'Sorry..',\r\n        description: (\r\n          <ul>\r\n            {body.errors.map((err2) => (\r\n              <li key={err2}>\r\n                {err2.param}\r\n                {' '}\r\n                -\r\n                {' '}\r\n                {err2.msg}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ),\r\n        placement: 'bottomRight',\r\n      });\r\n    } else if (statusCode === 401) {\r\n      Modal.error({\r\n        centered: true,\r\n        title: 'Unauthorised!',\r\n        content: 'This account is unauthorised, You need to logout!',\r\n        okText: 'Procced',\r\n        onOk() {\r\n          logout();\r\n        },\r\n      });\r\n    } else if (statusCode === 400) {\r\n      notification.error({\r\n        message: 'Sorry..',\r\n        description: body.msg,\r\n        placement: 'bottomRight',\r\n      });\r\n    } else if (statusCode === 403) {\r\n      notification.warning({\r\n        message: 'Invalid Username or Password',\r\n        description: body.msg,\r\n        placement: 'bottomRight',\r\n      });\r\n    }\r\n  } else {\r\n    notification.error({\r\n      message: 'Sorry..',\r\n      description: 'Server Error',\r\n      placement: 'bottomRight',\r\n    });\r\n  }\r\n};\r\n","import superagent from \"superagent\";\r\nimport superagentAbsolute from \"superagent-absolute\";\r\nimport notificationHandler from \"./notificationHandler\";\r\nimport store from \"../store/index\";\r\n\r\nconst currentLang = localStorage.getItem(\"i18nextLng\");\r\n\r\n// const rawToken = localStorage.getItem('lucid-token');\r\n// // eslint-disable-next-line operator-linebreak\r\n// const token =\r\n//   rawToken != null ? `${rawToken}`.substr(10, rawToken.length - 12) : '';\r\n\r\n// let agent = superagent.agent();\r\n// agent.on('error', (err) => {\r\n//   notificationHandler(err);\r\n// });\r\n\r\n// agent = agent.set('Content-Type', 'application/json');\r\n// agent = agent.set('authorization', `Bearer ${token}`);\r\n// agent = agent.type('json');\r\n\r\n// const request = superagentAbsolute(agent)(`${process.env.REACT_APP_API_LINK}`);\r\n\r\nexport default function getAgentInstance() {\r\n  let agent = superagent.agent();\r\n  let lang;\r\n\r\n  if (currentLang === \"en-GB\") {\r\n    lang = \"en\";\r\n  } else {\r\n    lang = currentLang;\r\n  }\r\n\r\n  agent.on(\"error\", (err) => {\r\n    notificationHandler(err);\r\n  });\r\n  const rawToken = localStorage.getItem(\r\n    process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME\r\n  );\r\n  // eslint-disable-next-line operator-linebreak\r\n  const token =\r\n    rawToken != null ? `${rawToken}`.substr(10, rawToken.length - 12) : \"\";\r\n\r\n  // agent = agent.set('Content-Type', 'application/json');\r\n  agent = agent.set(\r\n    \"authorization\",\r\n    \"Bearer \" + store.tokenStore.value || token\r\n  );\r\n  agent = agent.set(\"lang\", lang);\r\n  // agent = agent.type('json');\r\n\r\n  const request = superagentAbsolute(agent)(`${process.env.REACT_APP_API_URL}`);\r\n  return request;\r\n}\r\n","/* eslint-disable max-classes-per-file */\r\nimport {computed, observable,action} from 'mobx';\r\nimport { persist, create } from 'mobx-persist';\r\n\r\nclass Token {\r\n\r\n  @persist @observable value = '';\r\n\r\n  @observable clear() {\r\n    this.value = '';\r\n  }\r\n\r\n  @action\r\n  setToken(token){\r\n    this.value=token\r\n    localStorage.setItem(process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME,JSON.stringify(this))\r\n  }\r\n}\r\nclass User {\r\n  @persist('object') @observable value = {};\r\n\r\n  @observable clear() {\r\n    this.value = {};\r\n  }\r\n\r\n  @action\r\n  setUser(user){\r\n    this.value=user\r\n    localStorage.setItem(process.env.REACT_APP_USER_LOCALSTORAGE_NAME,JSON.stringify(this))\r\n  }\r\n}\r\n\r\n// const store = (window.store = new Store());\r\n\r\nconst userStore = new User();\r\nconst tokenStore = new Token();\r\nconst hydrate = create({\r\n  storage: localStorage,\r\n  jsonify: true,\r\n});\r\n\r\nhydrate(process.env.REACT_APP_USER_LOCALSTORAGE_NAME, userStore).then(() => {});\r\nhydrate(process.env.REACT_APP_TOKEN_LOCALSTORAGE_NAME, tokenStore).then(() => {});\r\n\r\nexport default {\r\n  userStore,\r\n  tokenStore,\r\n};\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport en from './locales/en.json';\r\nimport ar from './locales/ar.json';\r\n\r\ni18n\r\n  // detect user language\r\n  .use(LanguageDetector)\r\n\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n\r\n  // init i18next\r\n  .init({\r\n    debug: false,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    resources: {\r\n      en,\r\n      ar\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.0a9f5f25.svg\";"],"sourceRoot":""}